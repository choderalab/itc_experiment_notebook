---
options:
  minimize: yes
  verbose: yes
  temperature: 300*kelvin
  pressure: 1*atmosphere
  output_dir: host_guest_1
  resume_setup: yes
  resume_simulation: yes
  hydrogen_mass: 3.0 * amu
  checkpoint_interval: 50

# Configure the specific molecules we will use for our systems
molecules:
  # Define our Host, cucurbit[7]uril, we can call it whatever we want so we just use its name here as the directive
  CD:
    filepath: CD_out0.mol2
    antechamber: # Specify that missing parameters not in GAFF are acquired through ANTECHAMBER first
      charge_method: null # We pre-computed host charges to save time at YANK run, so set this to null to specify no charge computation method
  # Define our ligand molecule, B2
  GUEST_913:
    filepath: 913_out.mol2
    # Get the partial charges for the ligand by generating them from antechamber with the AM1-BCC charge method
    antechamber:
      charge_method: bcc

  GUEST_7811:
    filepath: 7811_out1.pdb
    # Get the partial charges for the ligand by generating them from antechamber with the AM1-BCC charge method
    antechamber:
      charge_method: bcc

  GUEST_14435:
    filepath: 14435_out1.pdb
    # Get the partial charges for the ligand by generating them from antechamber with the AM1-BCC charge method
    antechamber:
      charge_method: bcc



# Define the solvent for our system, here we use GBSA Implicit Solvent and Particle Mesh Ewald electrostatics treatment for Explicit Sovlent
solvents:
  # We can title this solvent whatever we want. We just call it "GBSA" for easy remembering
  #GBSA:
  #  nonbonded_method: NoCutoff # Main definition of the nonbonded method
  #  implicit_solvent: OBC2 # Onufriev-Bashford-Case GBSA model, name is related to Implicit solvents in OpenMM
  # Similarly, we can title this solvent whatever we want. We call it "pme" for ease and to be unique from the gbsa entry
  pme:
    nonbonded_method: PME
    # Specifies the distance btween "long range" and "short range" forces for PME
    nonbonded_cutoff: 12*angstroms
    # Specify the distance at which the short range forces are smoothly brought to 0 so there is no discontinuity in the force
    # By default, this is nonbonded_cutoff minus 1 (one) angstrom
    switch_distance: 11*angstroms
    ewald_error_tolerance: 1.0e-4
    # Specify a volume as a radius away the edge of the molecules molecules (CB7 and B2)
    # this volume will be packed with water, leaving a small cavity for the non-water molecules
    # You should alway minimize if you have this option
    clearance: 12*angstroms
    # Add thise itons if we need to neutralize the system.
    positive_ion: Na+
    negative_ion: Cl-

mcmc_moves:
    langevin:
        type: LangevinSplittingDynamicsMove
        timestep: 4.0*femtosecond
        splitting: "V R O R V"
        n_steps: 500

samplers:
    sams:
        type: SAMSSampler
        mcmc_moves: langevin
        state_update_scheme: global-jump
        gamma0: 10.0
        flatness_threshold: 1.0
        number_of_iterations: 10000

# Define the systems: What is the ligand, receptor, and solvent we put them in
systems:
  CD-913:
    receptor: CD
    ligand: GUEST_913
    solvent: pme
    leap:
      parameters: [leaprc.protein.ff14SB, leaprc.gaff, leaprc.water.tip4pew]

  CD-7811:
    receptor: CD
    ligand: GUEST_7811
    solvent: pme
    leap:
      parameters: [leaprc.protein.ff14SB, leaprc.gaff, leaprc.water.tip4pew]

  CD-14435:
    receptor: CD
    ligand: GUEST_14435
    solvent: pme
    leap:
      parameters: [leaprc.protein.ff14SB, leaprc.gaff, leaprc.water.tip4pew]


protocols:
  binding-auto:
    complex:
      alchemical_path: auto
    solvent:
      alchemical_path: auto


# Here we combine the system and the protocol to make an expirement
experiments:
  sampler: sams
  system: !Combinatorial [CD-913, CD-7811, CD-14435]
  protocol: binding-auto
  restraint:
    # Note that there is no lambda_electrostatics set in the protocol above, that is because we want the guest to always stay near the host.
    type: Harmonic
